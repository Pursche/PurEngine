// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: CapTexture.capnp

#include "CapTexture.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<23> b_ca5724c574c6b876 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    118, 184, 198, 116, 197,  36,  87, 202,
     23,   0,   0,   0,   2,   0,   0,   0,
    232,  16,  35,  54,  42,  37,  94, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  31,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84, 121, 112, 101, 115,  47,  67,  97,
    112,  84, 101, 120, 116, 117, 114, 101,
     46,  99,  97, 112, 110, 112,  58,  67,
     97, 112,  84, 101, 120, 116, 117, 114,
    101,  84, 121, 112, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 109, 112, 108, 101,   0,   0, }
};
::capnp::word const* const bp_ca5724c574c6b876 = b_ca5724c574c6b876.words;
#if !CAPNP_LITE
static const uint16_t m_ca5724c574c6b876[] = {0};
const ::capnp::_::RawSchema s_ca5724c574c6b876 = {
  0xca5724c574c6b876, b_ca5724c574c6b876.words, 23, nullptr, m_ca5724c574c6b876,
  0, 1, nullptr, nullptr, nullptr, { &s_ca5724c574c6b876, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(CapTextureType_ca5724c574c6b876, ca5724c574c6b876);
static const ::capnp::_::AlignedData<39> b_e1cd3320d32be4e1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    225, 228,  43, 211,  32,  51, 205, 225,
     23,   0,   0,   0,   2,   0,   0,   0,
    232,  16,  35,  54,  42,  37,  94, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 127,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84, 121, 112, 101, 115,  47,  67,  97,
    112,  84, 101, 120, 116, 117, 114, 101,
     46,  99,  97, 112, 110, 112,  58,  67,
     97, 112,  67, 104,  97, 110, 110, 101,
    108,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 110, 101,   0,   0,   0,   0,
    114, 101, 100,   0,   0,   0,   0,   0,
    103, 114, 101, 101, 110,   0,   0,   0,
     98, 108, 117, 101,   0,   0,   0,   0,
     97, 108, 112, 104,  97,   0,   0,   0, }
};
::capnp::word const* const bp_e1cd3320d32be4e1 = b_e1cd3320d32be4e1.words;
#if !CAPNP_LITE
static const uint16_t m_e1cd3320d32be4e1[] = {4, 3, 2, 0, 1};
const ::capnp::_::RawSchema s_e1cd3320d32be4e1 = {
  0xe1cd3320d32be4e1, b_e1cd3320d32be4e1.words, 39, nullptr, m_e1cd3320d32be4e1,
  0, 5, nullptr, nullptr, nullptr, { &s_e1cd3320d32be4e1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(CapChannel_e1cd3320d32be4e1, e1cd3320d32be4e1);
static const ::capnp::_::AlignedData<128> b_beb479d22709271d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     29,  39,   9,  39, 210, 121, 180, 190,
     23,   0,   0,   0,   1,   0,   3,   0,
    232,  16,  35,  54,  42,  37,  94, 162,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 143,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84, 121, 112, 101, 115,  47,  67,  97,
    112,  84, 101, 120, 116, 117, 114, 101,
     46,  99,  97, 112, 110, 112,  58,  67,
     97, 112,  84, 101, 120, 116, 117, 114,
    101,  72, 101,  97, 100, 101, 114,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     28,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    188,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   3,   0,   1,   0,
    204,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   0,   0,   0,   3,   0,   1,   0,
    212,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   0,   0,   0,   3,   0,   1,   0,
    220,   0,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    217,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    216,   0,   0,   0,   3,   0,   1,   0,
    228,   0,   0,   0,   2,   0,   1,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    118, 184, 198, 116, 197,  36,  87, 202,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119, 105, 100, 116, 104,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 101, 105, 103, 104, 116,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114,  67, 104,  97, 110, 110, 101, 108,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    225, 228,  43, 211,  32,  51, 205, 225,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103,  67, 104,  97, 110, 110, 101, 108,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    225, 228,  43, 211,  32,  51, 205, 225,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  67, 104,  97, 110, 110, 101, 108,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    225, 228,  43, 211,  32,  51, 205, 225,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  67, 104,  97, 110, 110, 101, 108,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    225, 228,  43, 211,  32,  51, 205, 225,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_beb479d22709271d = b_beb479d22709271d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_beb479d22709271d[] = {
  &s_ca5724c574c6b876,
  &s_e1cd3320d32be4e1,
};
static const uint16_t m_beb479d22709271d[] = {6, 5, 4, 2, 3, 0, 1};
static const uint16_t i_beb479d22709271d[] = {0, 1, 2, 3, 4, 5, 6};
const ::capnp::_::RawSchema s_beb479d22709271d = {
  0xbeb479d22709271d, b_beb479d22709271d.words, 128, d_beb479d22709271d, m_beb479d22709271d,
  2, 7, i_beb479d22709271d, nullptr, nullptr, { &s_beb479d22709271d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_8a58b095701321ef = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    239,  33,  19, 112, 149, 176,  88, 138,
     23,   0,   0,   0,   1,   0,   0,   0,
    232,  16,  35,  54,  42,  37,  94, 162,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84, 121, 112, 101, 115,  47,  67,  97,
    112,  84, 101, 120, 116, 117, 114, 101,
     46,  99,  97, 112, 110, 112,  58,  67,
     97, 112,  84, 101, 120, 116, 117, 114,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     29,  39,   9,  39, 210, 121, 180, 190,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8a58b095701321ef = b_8a58b095701321ef.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8a58b095701321ef[] = {
  &s_beb479d22709271d,
};
static const uint16_t m_8a58b095701321ef[] = {1, 0};
static const uint16_t i_8a58b095701321ef[] = {0, 1};
const ::capnp::_::RawSchema s_8a58b095701321ef = {
  0x8a58b095701321ef, b_8a58b095701321ef.words, 49, d_8a58b095701321ef, m_8a58b095701321ef,
  1, 2, i_8a58b095701321ef, nullptr, nullptr, { &s_8a58b095701321ef, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// CapTextureHeader
constexpr uint16_t CapTextureHeader::_capnpPrivate::dataWordSize;
constexpr uint16_t CapTextureHeader::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CapTextureHeader::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CapTextureHeader::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CapTexture
constexpr uint16_t CapTexture::_capnpPrivate::dataWordSize;
constexpr uint16_t CapTexture::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CapTexture::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CapTexture::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



