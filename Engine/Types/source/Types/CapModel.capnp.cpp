// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: CapModel.capnp

#include "CapModel.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<63> b_b747ed917331d47a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    122, 212,  49, 115, 145, 237,  71, 183,
     21,   0,   0,   0,   1,   0,   2,   0,
    233,  16,  35,  54,  42,  37,  94, 162,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84, 121, 112, 101, 115,  47,  67,  97,
    112,  77, 111, 100, 101, 108,  46,  99,
     97, 112, 110, 112,  58,  67,  97, 112,
     86, 101,  99, 116, 111, 114,  51,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    120,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    122,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b747ed917331d47a = b_b747ed917331d47a.words;
#if !CAPNP_LITE
static const uint16_t m_b747ed917331d47a[] = {0, 1, 2};
static const uint16_t i_b747ed917331d47a[] = {0, 1, 2};
const ::capnp::_::RawSchema s_b747ed917331d47a = {
  0xb747ed917331d47a, b_b747ed917331d47a.words, 63, nullptr, m_b747ed917331d47a,
  0, 3, i_b747ed917331d47a, nullptr, nullptr, { &s_b747ed917331d47a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_8f4ec38ef88be8c5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    197, 232, 139, 248, 142, 195,  78, 143,
     21,   0,   0,   0,   1,   0,   1,   0,
    233,  16,  35,  54,  42,  37,  94, 162,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84, 121, 112, 101, 115,  47,  67,  97,
    112,  77, 111, 100, 101, 108,  46,  99,
     97, 112, 110, 112,  58,  67,  97, 112,
     86, 101,  99, 116, 111, 114,  50,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    120,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8f4ec38ef88be8c5 = b_8f4ec38ef88be8c5.words;
#if !CAPNP_LITE
static const uint16_t m_8f4ec38ef88be8c5[] = {0, 1};
static const uint16_t i_8f4ec38ef88be8c5[] = {0, 1};
const ::capnp::_::RawSchema s_8f4ec38ef88be8c5 = {
  0x8f4ec38ef88be8c5, b_8f4ec38ef88be8c5.words, 48, nullptr, m_8f4ec38ef88be8c5,
  0, 2, i_8f4ec38ef88be8c5, nullptr, nullptr, { &s_8f4ec38ef88be8c5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_df2a047c1f67783f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     63, 120, 103,  31, 124,   4,  42, 223,
     21,   0,   0,   0,   1,   0,   0,   0,
    233,  16,  35,  54,  42,  37,  94, 162,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84, 121, 112, 101, 115,  47,  67,  97,
    112,  77, 111, 100, 101, 108,  46,  99,
     97, 112, 110, 112,  58,  67,  97, 112,
     86, 101, 114, 116, 101, 120,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    112, 111, 115, 105, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    122, 212,  49, 115, 145, 237,  71, 183,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 114, 109,  97, 108,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    122, 212,  49, 115, 145, 237,  71, 183,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 120,  67, 111, 111, 114, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    197, 232, 139, 248, 142, 195,  78, 143,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_df2a047c1f67783f = b_df2a047c1f67783f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_df2a047c1f67783f[] = {
  &s_8f4ec38ef88be8c5,
  &s_b747ed917331d47a,
};
static const uint16_t m_df2a047c1f67783f[] = {1, 0, 2};
static const uint16_t i_df2a047c1f67783f[] = {0, 1, 2};
const ::capnp::_::RawSchema s_df2a047c1f67783f = {
  0xdf2a047c1f67783f, b_df2a047c1f67783f.words, 65, d_df2a047c1f67783f, m_df2a047c1f67783f,
  2, 3, i_df2a047c1f67783f, nullptr, nullptr, { &s_df2a047c1f67783f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<57> b_9edfc4cfa960c55d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     93, 197,  96, 169, 207, 196, 223, 158,
     21,   0,   0,   0,   1,   0,   0,   0,
    233,  16,  35,  54,  42,  37,  94, 162,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84, 121, 112, 101, 115,  47,  67,  97,
    112,  77, 111, 100, 101, 108,  46,  99,
     97, 112, 110, 112,  58,  67,  97, 112,
     77, 111, 100, 101, 108,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    118, 101, 114, 116, 105,  99, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     63, 120, 103,  31, 124,   4,  42, 223,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 100, 105,  99, 101, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9edfc4cfa960c55d = b_9edfc4cfa960c55d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9edfc4cfa960c55d[] = {
  &s_df2a047c1f67783f,
};
static const uint16_t m_9edfc4cfa960c55d[] = {1, 0};
static const uint16_t i_9edfc4cfa960c55d[] = {0, 1};
const ::capnp::_::RawSchema s_9edfc4cfa960c55d = {
  0x9edfc4cfa960c55d, b_9edfc4cfa960c55d.words, 57, d_9edfc4cfa960c55d, m_9edfc4cfa960c55d,
  1, 2, i_9edfc4cfa960c55d, nullptr, nullptr, { &s_9edfc4cfa960c55d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// CapVector3
constexpr uint16_t CapVector3::_capnpPrivate::dataWordSize;
constexpr uint16_t CapVector3::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CapVector3::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CapVector3::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CapVector2
constexpr uint16_t CapVector2::_capnpPrivate::dataWordSize;
constexpr uint16_t CapVector2::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CapVector2::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CapVector2::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CapVertex
constexpr uint16_t CapVertex::_capnpPrivate::dataWordSize;
constexpr uint16_t CapVertex::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CapVertex::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CapVertex::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CapModel
constexpr uint16_t CapModel::_capnpPrivate::dataWordSize;
constexpr uint16_t CapModel::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CapModel::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CapModel::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



